{"version":3,"sources":["components/form.js","components/button.js","components/apiService.js","components/apiGet.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","text","hadleInputChange","e","setState","currentTarget","value","handleText","handleSubmit","preventDefault","props","onSubmit","options","method","headers","body","JSON","stringify","fetch","then","res","json","console","log","reset","className","this","type","pattern","title","required","onChange","Component","Button","style","width","onClick","whenClicked","label","defaultProps","alert","apiService","page","axios","get","require","ApiGetComments","comments","loading","error","activePage","totalPage","fecthComments","handleloadPageComments","prevState","data","last_page","map","comment","id","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","bind","App","addComment","shortid","generate","dataComment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f9e0c8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './css/form.css';\nclass Form extends Component {\n  state = {\n    name: '',\n    text: '',\n  };\n\n  hadleInputChange = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n  handleText = e => {\n    this.setState({ text: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.name, this.state.text);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    };\n    fetch('https://jordan.ashton.fashion/api/goods/30/comments', options)\n      .then(res => res.json())\n      .then(console.log);\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '' });\n    this.setState({ text: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"formFilling\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className=\"inputContact\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.hadleInputChange}\n          />\n        </label>\n        Text\n        <textarea\n          className=\"inputContact\"\n          value={this.state.text}\n          onChange={this.handleText}\n        ></textarea>\n        <button className=\"buttonAdd\" type=\"submit\">\n          Add comment\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    label: PropTypes.string,\n    width: PropTypes.string,\n    whenClicked: PropTypes.func,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    label: 'Button',\n    width: '80px',\n    whenClicked: () => {\n      alert('Button clicked');\n    },\n  };\n\n  render() {\n    return (\n      <button\n        className=\"styles.Button\"\n        type={this.props.type}\n        style={{ width: this.props.width }}\n        onClick={() => this.props.whenClicked(this.props.label)}\n      >\n        {this.props.label}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://jordan.ashton.fashion/api/goods/30/comments';\n\nconst apiService = page => {\n  return axios.get(`${BASE_URL}?page=${page}`);\n};\n\nexport default apiService;\n","import React, { Component } from 'react';\nimport Button from './button';\nimport './css/listCommetns.css';\nimport apiService from './apiService';\nimport Pagination from 'react-js-pagination';\nrequire('../../node_modules/bootstrap/dist/css/bootstrap.css');\n\nexport default class ApiGetComments extends Component {\n  state = {\n    comments: [],\n    loading: false,\n    error: null,\n    activePage: 1,\n    totalPage: 0,\n  };\n\n  componentDidMount() {\n    this.fecthComments().then(comments =>\n      this.setState({\n        comments: comments.data.data,\n        totalPage: comments.data.last_page,\n      }),\n    );\n  }\n\n  fecthComments = () => apiService(this.state.activePage);\n\n  handleloadPageComments = () => {\n    this.setState(\n      ({ activePage }) => ({ activePage: activePage + 1 }),\n      () => {\n        this.fecthComments().then(comments => {\n          this.setState(prevState => ({\n            comments: [...prevState.comments, ...comments.data.data],\n          }));\n        });\n      },\n    );\n  };\n\n  handlePageChange(activePage) {\n    this.setState({ activePage }, () => {\n      this.fecthComments().then(comments => {\n        this.setState({\n          comments: comments.data.data,\n        });\n      });\n    });\n  }\n\n  render() {\n    const { loading, comments, totalPage } = this.state;\n    console.log(comments);\n    return (\n      <section className=\"sectionCommentGallery\">\n        <h1>Comments</h1>\n        {loading && <div>loading...</div>}\n        <div>\n          <ul className=\"CommentGallery\">\n            {comments.map(comment => {\n              return (\n                <li className=\"CommentGalleryItem\" key={comment.id}>\n                  <p>\n                    Name:\n                    <span> {comment.name}</span>\n                  </p>\n                  <p>\n                    Text:\n                    <span> {comment.text}</span>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"navigation\">\n            <div>\n              {totalPage !== this.state.activePage && (\n                <Button\n                  className=\"buttonGallery\"\n                  type=\"button\"\n                  label=\"Load more...\"\n                  width=\"140px\"\n                  whenClicked={this.handleloadPageComments}\n                />\n              )}\n\n              <Pagination\n                className=\"paginationGallery\"\n                activePage={this.state.activePage}\n                itemsCountPerPage={1}\n                totalItemsCount={totalPage}\n                pageRangeDisplayed={5}\n                onChange={this.handlePageChange.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from './components/form';\nimport GalleryComments from './components/apiGet';\n\nclass App extends Component {\n  state = {\n    comments: [],\n  };\n\n  addComment = (name, text) => {\n    const comment = {\n      id: shortid.generate(),\n      name,\n      text,\n    };\n    this.setState(prevState => ({\n      comments: [comment, ...prevState.comments],\n    }));\n  };\n\n  render() {\n    const comments = this.state;\n    return (\n      <div>\n        <Form onSubmit={this.addComment} />\n        <GalleryComments dataComment={comments} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}